[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "Albedo"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "Normal"
texture_type = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D Albedo : hint_albedo;
uniform sampler2D Normal : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Albedo, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Normal, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	NORMALMAP = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 160, -428 )
nodes/fragment/0/position = Vector2( 1180, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 660, -100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 660, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 8 )
